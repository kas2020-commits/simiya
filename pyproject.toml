[project]
name = "simiya"
authors = [
  {name = "Karem Abdul-Samad", email = "kas2020@protonmail.com"},
]
classifiers = [
  "Private :: Do Not Upload",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed"
]
requires-python = "~=3.12"
readme = "README.md"
dynamic = ["version", "description"]
dependencies = [
  "lark >= 1.1.8",
  "rich >= 13.7.0",
  "typer[all] >= 0.9.0",
  "networkx[default] >= 3.2.1"
]

[project.scripts]
simiya = "simiya.cli:App"

[project.optional-dependencies]
dev = [
  "pyright >= 1.1.334",
  "black >= 23.10",
  "isort >= 5.12",
  "pydocstyle >= 6.3",
  "flake8 >= 6.1",
]

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project.urls]
Source = "https://gitlab.com/kas-commits/simiya"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "not_deployed",
    "deprecated"
]
line-length = 79
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I", "C901", "W"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.black]
line-length = 79

[tool.isort]
multi_line_output = 3
profile = "black"
line_length = 79

[tool.pydocstyle]
convention = "google"

[tool.pyright]
typeCheckingMode = "standard"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv"
]
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
analyzeUnannotatedFunctions = true
strictParameterNoneValue = true
deprecateTypingAliases = true

[tool.mypy]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv"
]
